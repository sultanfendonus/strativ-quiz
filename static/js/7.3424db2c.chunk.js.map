{"version":3,"sources":["../node_modules/@material-ui/core/esm/FormControl/useFormControl.js","../node_modules/@material-ui/core/esm/FormControl/FormControlContext.js","utils/characters.js","../node_modules/@material-ui/core/esm/InputBase/utils.js","../node_modules/@material-ui/core/esm/utils/useControlled.js","../node_modules/@material-ui/core/esm/FormControl/FormControl.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","views/user/Questions/components/SubmitAnswer.js","views/user/Questions/Question.js","views/user/Questions/index.js"],"names":["__webpack_require__","d","__webpack_exports__","useFormControl","react__WEBPACK_IMPORTED_MODULE_0__","_FormControlContext__WEBPACK_IMPORTED_MODULE_1__","FormControlContext","charArray","hasValue","value","Array","isArray","length","isFilled","obj","SSR","arguments","undefined","defaultValue","isAdornedStart","startAdornment","useControlled","_ref","controlled","defaultProp","default","isControlled","name","state","current","_React$useState","valueState","setValue","newValue","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","clsx__WEBPACK_IMPORTED_MODULE_4__","_InputBase_utils__WEBPACK_IMPORTED_MODULE_5__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_6__","_utils_capitalize__WEBPACK_IMPORTED_MODULE_7__","_utils_isMuiElement__WEBPACK_IMPORTED_MODULE_8__","_FormControlContext__WEBPACK_IMPORTED_MODULE_9__","FormControl","props","ref","children","classes","className","_props$color","color","_props$component","component","Component","_props$disabled","disabled","_props$error","error","_props$fullWidth","fullWidth","visuallyFocused","focused","_props$hiddenLabel","hiddenLabel","_props$margin","margin","_props$required","required","size","_props$variant","variant","other","Object","initialAdornedStart","forEach","child","input","adornedStart","setAdornedStart","_React$useState2","initialFilled","filled","setFilled","_React$useState3","_focused","setFocused","onFilled","childContext","onBlur","onEmpty","onFocus","registerEffect","Provider","root","concat","display","flexDirection","position","minWidth","padding","border","verticalAlign","marginNormal","marginTop","marginBottom","marginDense","width","_Paper__WEBPACK_IMPORTED_MODULE_5__","Card","_props$raised","raised","elevation","overflow","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","CardContent","&:last-child","paddingBottom","useStyles","makeStyles","theme","spacing","container","button","marginLeft","connect","_useState","useState","_useState2","slicedToArray","open","setOpen","_useState3","_useState4","statement","setStatement","_useState5","_useState6","optionList","setOptionList","_useState7","_useState8","_useState9","_useState10","dispatch","useDispatch","reSubmit","question","useEffect","title","options","map","option","optionText","answer","handleClose","react_default","a","createElement","Button","onClick","Dialog","maxWidth","onClose","aria-labelledby","DialogTitle","id","DialogContent","dividers","style","justifyContent","Typography","RadioGroup","aria-label","index","FormControlLabel","key","valueIndex","control","Radio","onChange","event","target","optionIndex","correct","handleChange","label","DialogActions","autoFocus","data","submissionHistory","toConsumableArray","user","window","localStorage","getItem","questionId","userId","answerValue","push","timestamp","Date","now","alert","console","log","submissionId","reSubmitAnswer","submitAnswer","_content","backdrop","zIndex","drawer","cardRoot","alignItems","flexWrap","content","paddingLeft","flexGrow","defineProperty","breakpoints","down","header","flexBasis","avatar","marginRight","stats","actions","questionList","QuestionBankReducer","submittedQuestionList","AnswerReducer","rest","objectWithoutProperties","getAllQuestion","getSubmittedQuestions","components","Grid","justify","direction","result","find","item","assign","uuid","clsx","Avatar","alt","components_SubmitAnswer","Questions_Question"],"mappings":"0FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,KAEe,SAAAG,IACf,OAASC,EAAA,WAAiBC,EAAA,sCCH1BL,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAKAM,EAEAF,EAAA,gBAMO,SAAAD,IACP,OAASC,EAAA,WAAgBE,GAEVJ,EAAA,sCChBfF,EAAAC,EAAAC,EAAA,sBAAAK,IAAO,IAAMA,EAAY,CACvB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,uCCpBK,SAAAC,EAAAC,GACP,aAAAA,KAAAC,MAAAC,QAAAF,IAAA,IAAAA,EAAAG,QASO,SAAAC,EAAAC,GACP,IAAAC,EAAAC,UAAAJ,OAAA,QAAAK,IAAAD,UAAA,IAAAA,UAAA,GACA,OAAAF,IAAAN,EAAAM,EAAAL,QAAA,KAAAK,EAAAL,OAAAM,GAAAP,EAAAM,EAAAI,eAAA,KAAAJ,EAAAI,cAQO,SAAAC,EAAAL,GACP,OAAAA,EAAAM,eA3BApB,EAAAC,EAAAC,EAAA,sBAAAW,IAAAb,EAAAC,EAAAC,EAAA,sBAAAiB,sCCAAnB,EAAAC,EAAAC,EAAA,sBAAAmB,IAAA,IAAAjB,EAAAJ,EAAA,GAEe,SAAAqB,EAAAC,GACf,IAAAC,EAAAD,EAAAC,WACAC,EAAAF,EAAAG,QAMAC,GALAJ,EAAAK,KACAL,EAAAM,MAGsBxB,EAAA,YAAYa,IAAAM,GAClCM,SAEAC,EAAwB1B,EAAA,SAAcoB,GACtCO,EAAAD,EAAA,GACAE,EAAAF,EAAA,GA0BA,OAxBAJ,EAAAH,EAAAQ,EAmB+B3B,EAAA,YAAiB,SAAA6B,GAChDP,GACAM,EAAAC,IAEG,wCCvCH,IAAAC,EAAAlC,EAAA,GAAAmC,EAAAnC,EAAA,GAAAoC,EAAApC,EAAA,GAAAqC,GAAArC,EAAA,GAAAA,EAAA,IAAAsC,EAAAtC,EAAA,KAAAuC,EAAAvC,EAAA,GAAAwC,EAAAxC,EAAA,GAAAyC,EAAAzC,EAAA,KAAA0C,EAAA1C,EAAA,KAkEA2C,EAEAP,EAAA,WAAgB,SAAAQ,EAAAC,GAChB,IAAAC,EAAAF,EAAAE,SACAC,EAAAH,EAAAG,QACAC,EAAAJ,EAAAI,UACAC,EAAAL,EAAAM,MACAA,OAAA,IAAAD,EAAA,UAAAA,EACAE,EAAAP,EAAAQ,UACAC,OAAA,IAAAF,EAAA,MAAAA,EACAG,EAAAV,EAAAW,SACAA,OAAA,IAAAD,KACAE,EAAAZ,EAAAa,MACAA,OAAA,IAAAD,KACAE,EAAAd,EAAAe,UACAA,OAAA,IAAAD,KACAE,EAAAhB,EAAAiB,QACAC,EAAAlB,EAAAmB,YACAA,OAAA,IAAAD,KACAE,EAAApB,EAAAqB,OACAA,OAAA,IAAAD,EAAA,OAAAA,EACAE,EAAAtB,EAAAuB,SACAA,OAAA,IAAAD,KACAE,EAAAxB,EAAAwB,KACAC,EAAAzB,EAAA0B,QACAA,OAAA,IAAAD,EAAA,WAAAA,EACAE,EAAcC,OAAArC,EAAA,EAAAqC,CAAwB5B,EAAA,oJAEtCd,EAAwBM,EAAA,SAAc,WAGtC,IAAAqC,GAAA,EAgBA,OAdA3B,GACMV,EAAA,SAAcsC,QAAA5B,EAAA,SAAA6B,GACpB,GAAaH,OAAA/B,EAAA,EAAA+B,CAAYG,EAAA,oBAAzB,CAIA,IAAAC,EAAoBJ,OAAA/B,EAAA,EAAA+B,CAAYG,EAAA,YAAAA,EAAA/B,MAAAgC,MAAAD,EAEhCC,GAAqBJ,OAAAlC,EAAA,EAAAkC,CAAcI,EAAAhC,SACnC6B,GAAA,MAKAA,IAEAI,EAAA/C,EAAA,GACAgD,EAAAhD,EAAA,GAEAiD,EAAyB3C,EAAA,SAAc,WAGvC,IAAA4C,GAAA,EAcA,OAZAlC,GACMV,EAAA,SAAcsC,QAAA5B,EAAA,SAAA6B,GACPH,OAAA/B,EAAA,EAAA+B,CAAYG,EAAA,qBAIbH,OAAAlC,EAAA,EAAAkC,CAAQG,EAAA/B,OAAA,KACpBoC,GAAA,KAKAA,IAEAC,EAAAF,EAAA,GACAG,EAAAH,EAAA,GAEAI,EAAyB/C,EAAA,UAAc,GACvCgD,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAEAtB,OAAA5C,IAAA2C,IAAAwB,EAEA7B,GAAAM,GACAwB,GAAA,GAqBA,IAAAC,EAAiBlD,EAAA,YAAiB,WAClC8C,GAAA,IACG,IAIHK,EAAA,CACAV,eACAC,kBACA5B,QACAK,WACAE,QACAwB,SACApB,UACAF,YACAI,cACAE,QAAA,UAAAG,EAAA,aAAAnD,IAAAgD,EACAuB,OAAA,WACAH,GAAA,IAEAI,QAjBgBrD,EAAA,YAAiB,WACjC8C,GAAA,IACG,IAgBHI,WACAI,QAAA,WACAL,GAAA,IAEAM,oBA3CAA,EA4CAxB,WACAG,WAEA,OAEIlC,EAAA,cAAoBM,EAAA,EAAkBkD,SAAA,CAC1CnF,MAAA8E,GAGInD,EAAA,cAAmBiB,EAAYmB,OAAAtC,EAAA,EAAAsC,CAAQ,CAC3CxB,UAAiBwB,OAAAnC,EAAA,EAAAmC,CAAIzB,EAAA8C,KAAA7C,EAAA,SAAAiB,GAAAlB,EAAA,SAAA+C,OAAuEtB,OAAAhC,EAAA,EAAAgC,CAAUP,KAAAN,GAAAZ,EAAAY,WACtGd,OACK0B,GAAAzB,MAqFU5C,EAAA,EAAAsE,OAAAjC,EAAA,EAAAiC,CAzRR,CAEPqB,KAAA,CACAE,QAAA,cACAC,cAAA,SACAC,SAAA,WAEAC,SAAA,EACAC,QAAA,EACAlC,OAAA,EACAmC,OAAA,EACAC,cAAA,OAKAC,aAAA,CACAC,UAAA,GACAC,aAAA,GAIAC,YAAA,CACAF,UAAA,EACAC,aAAA,GAIA7C,UAAA,CACA+C,MAAA,SA4PyB,CACzB/E,KAAA,kBADe,CAEdgB,qCCrSD,IAAAT,EAAAlC,EAAA,GAAAmC,EAAAnC,EAAA,GAAAoC,EAAApC,EAAA,GAAAqC,GAAArC,EAAA,GAAAA,EAAA,IAAA2G,EAAA3G,EAAA,KAAAuC,EAAAvC,EAAA,GAaA4G,EAEAxE,EAAA,WAAgB,SAAAQ,EAAAC,GAChB,IAAAE,EAAAH,EAAAG,QACAC,EAAAJ,EAAAI,UACA6D,EAAAjE,EAAAkE,OACAA,OAAA,IAAAD,KACAtC,EAAcC,OAAArC,EAAA,EAAAqC,CAAwB5B,EAAA,kCAEtC,OAEIR,EAAA,cAAoBuE,EAAA,EAAOnC,OAAAtC,EAAA,EAAAsC,CAAQ,CACvCxB,UAAiBwB,OAAAnC,EAAA,EAAAmC,CAAIzB,EAAA8C,KAAA7C,GACrB+D,UAAAD,EAAA,IACAjE,OACK0B,MA8BUrE,EAAA,EAAAsE,OAAAjC,EAAA,EAAAiC,CAnDR,CAEPqB,KAAA,CACAmB,SAAA,WAgDyB,CACzBrF,KAAA,WADe,CAEdiF,qCC5DD,IAAA1E,EAAAlC,EAAA,GAAAmC,EAAAnC,EAAA,GAAAoC,EAAApC,EAAA,GAAAqC,GAAArC,EAAA,GAAAA,EAAA,IAAAiH,EAAAjH,EAAA,GAeAkH,EAEA9E,EAAA,WAAgB,SAAAQ,EAAAC,GAChB,IAAAE,EAAAH,EAAAG,QACAC,EAAAJ,EAAAI,UACAG,EAAAP,EAAAQ,UACAC,OAAA,IAAAF,EAAA,MAAAA,EACAoB,EAAcC,OAAArC,EAAA,EAAAqC,CAAwB5B,EAAA,qCAEtC,OAEIR,EAAA,cAAmBiB,EAAYmB,OAAAtC,EAAA,EAAAsC,CAAQ,CAC3CxB,UAAiBwB,OAAAnC,EAAA,EAAAmC,CAAIzB,EAAA8C,KAAA7C,GACrBH,OACK0B,MAiCUrE,EAAA,EAAAsE,OAAAyC,EAAA,EAAAzC,CAxDR,CAEPqB,KAAA,CACAM,QAAA,GACAgB,eAAA,CACAC,cAAA,MAmDyB,CACzBzF,KAAA,kBADe,CAEduF,uQCzCKG,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrC1B,KAAM,CACJM,QAASoB,EAAMC,QAAQ,IAEzBC,UAAW,CACTlB,UAAWgB,EAAMC,QAAQ,IAE3BE,OAAQ,CACNC,WAAYJ,EAAMC,QAAQ,IAE5B5C,MAAO,MA0IMgD,cAJS,SAAAhG,GACtB,MAAO,IAGMgG,CArIM,SAAAhF,GACnB,IAAMG,EAAUsE,IADYQ,EAEJC,oBAAS,GAFLC,EAAAvD,OAAAwD,EAAA,EAAAxD,CAAAqD,EAAA,GAErBI,EAFqBF,EAAA,GAEfG,EAFeH,EAAA,GAAAI,EAGML,mBAAS,IAHfM,EAAA5D,OAAAwD,EAAA,EAAAxD,CAAA2D,EAAA,GAGrBE,EAHqBD,EAAA,GAGVE,EAHUF,EAAA,GAAAG,EAIQT,mBAAS,IAJjBU,EAAAhE,OAAAwD,EAAA,EAAAxD,CAAA+D,EAAA,GAIrBE,EAJqBD,EAAA,GAITE,EAJSF,EAAA,GAAAG,EAKQb,mBAAS,IALjBc,EAAApE,OAAAwD,EAAA,EAAAxD,CAAAmE,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAMFd,mBAAS,KANPgB,EAAAtE,OAAAwD,EAAA,EAAAxD,CAAAqE,EAAA,GAMrBpI,EANqBqI,EAAA,GAMd9G,EANc8G,EAAA,GAOtBC,EAAWC,cACTC,EAAuBrG,EAAvBqG,SAAUC,EAAatG,EAAbsG,SAElBC,oBAAU,WACRb,EAAaY,EAASE,OACtBV,EAAcQ,EAASG,SACnBJ,GACFC,EAASG,QAAQC,IAAI,SAAAC,GACfA,EAAOC,aAAeN,EAASO,QACjCzH,EAASuH,EAAOC,eAIrB,IAEH,IAGME,EAAc,WAClBxB,GAAQ,IAyCV,OACEyB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE1F,KAAK,QACLE,QAAQ,YACRpB,MAAO+F,EAAW,YAAc,UAChCjG,UAAWD,EAAQ2E,OACnBqC,QApDkB,WACtB7B,GAAQ,KAqDHe,EAAW,eAAiB,iBAG/BU,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACErG,WAAW,EACXsG,SAAU,KACVC,QAASR,EACTS,kBAAgB,0BAChBlC,KAAMA,GAEN0B,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAaC,GAAG,0BAA0BH,QAASR,GAChDrB,GAGHsB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAeC,UAAQ,GACrBZ,EAAAC,EAAAC,cAAA,OAAKW,MAAO,CAAEzE,QAAS,OAAQ0E,eAAgB,kBAC7Cd,EAAAC,EAAAC,cAACa,EAAA,EAAD,mDAGFf,EAAAC,EAAAC,cAAClH,EAAA,EAAD,CAAaS,UAAU,YACrBuG,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAYC,aAAW,SAASjJ,KAAK,UAAUlB,MAAOA,GACnDgI,EAAWa,IAAI,SAACC,EAAQsB,GAAT,OACdlB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEC,IAAKF,EACLpK,MAAO8I,EAAOC,WACdwB,WAAYH,EACZI,QAAStB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,MACTC,SAAU,SAAAC,GAAK,OAjDZ,SAACA,EAAOP,GAC3B7I,EAASoJ,EAAMC,OAAO5K,OAEtBgI,EAAWa,IAAI,SAACC,EAAQ+B,GAEpB/B,EAAOgC,QADLD,IAAgBT,IA6CaW,CAAaJ,EAAOP,IACvCY,MAAOlC,EAAOC,mBAQ1BG,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACE/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,QAASL,GAAjB,SACAC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6B,WAAS,EACTrH,QAAQ,YACRyF,QAzFiB,WACzB,IAAI6B,EAAO,CACTC,kBAAmB3C,EAAS2C,kBAATrH,OAAAsH,EAAA,EAAAtH,CACX0E,EAAS2C,mBACb,IAEAE,EAAOC,OAAOC,aAAaC,QAAQ,WACzCN,EAAKO,WAAajD,EAASmB,GAC3BuB,EAAKQ,OAASL,EACdH,EAAKS,YAAc5L,EACnBmL,EAAKC,kBAAkBS,KAAK,CAAE7C,OAAQhJ,EAAO8L,UAAWC,KAAKC,QAE3C,KAAdpE,GAA0C,IAAtBI,EAAW7H,QAA0B,KAAVH,EACjDiM,MAAM,kCAENC,QAAQC,IAAIhB,GACR3C,GACF2C,EAAKvB,GAAKnB,EAAS2D,aACnB9D,EAAS+D,YAAelB,KAExB7C,EAASgE,YAAanB,IAExBlC,MAoEMxG,MAAM,WAJR,+BC7IJmE,EAAYC,YAAW,SAAAC,GAAK,IAAAyF,EAAA,MAAK,CACrCnH,KAAM,CACJM,QAASoB,EAAMC,QAAQ,IAEzBC,UAAW,CACTlB,UAAWgB,EAAMC,QAAQ,IAE3BE,OAAQ,CACNC,WAAYJ,EAAMC,QAAQ,IAE5ByF,SAAU,CACRC,OAAQ3F,EAAM2F,OAAOC,OAAS,EAC9BjK,MAAO,QAETkK,SAAU,CACRrH,QAAS,OACTsH,WAAY,SACZC,SAAU,OACV9G,aAAce,EAAMC,QAAQ,KAE9B+F,SAAOP,EAAA,CAELQ,YAAa,GACbrH,QAASoB,EAAMC,QAAQ,GACvBiG,SAAU,EACV1H,QAAS,OACTsH,WAAY,SACZ5C,eAAgB,iBAPXjG,OAAAkJ,EAAA,EAAAlJ,CAAAwI,EAQJzF,EAAMoG,YAAYC,KAAK,MAAQ,CAC9BlH,MAAO,OACP4G,SAAU,SAVP9I,OAAAkJ,EAAA,EAAAlJ,CAAAwI,EAYL,eAAgB,CACd5F,cAAeG,EAAMC,QAAQ,KAb1BwF,GAgBPa,OAAOrJ,OAAAkJ,EAAA,EAAAlJ,CAAA,CACLyF,SAAU,OACVvD,MAAO,IACPX,QAAS,QACRwB,EAAMoG,YAAYC,KAAK,MAAQ,CAE9BE,UAAW,SAGfC,OAAQ,CACNC,YAAazG,EAAMC,QAAQ,IAE7ByG,MAAMzJ,OAAAkJ,EAAA,EAAAlJ,CAAA,CACJ2B,QAASoB,EAAMC,QAAQ,IACtBD,EAAMoG,YAAYC,KAAK,MAAQ,CAC9BE,UAAW,QAGfI,QAAQ1J,OAAAkJ,EAAA,EAAAlJ,CAAA,CACN2B,QAASoB,EAAMC,QAAQ,IACtBD,EAAMoG,YAAYC,KAAK,MAAQ,CAC9BE,UAAW,WAoHFlG,cAPS,SAAAhG,GACtB,MAAO,CACLuM,aAAcvM,EAAMwM,oBAAoBD,aACxCE,sBAAuBzM,EAAM0M,cAAcD,wBAIhCzG,CA/GE,SAAAhF,GACf,IAAMG,EAAUsE,IACV0B,EAAWC,cACThG,EAAuBJ,EAAvBI,UAAcuL,EAHE/J,OAAAgK,EAAA,EAAAhK,CAGO5B,EAHP,eAKxBuG,oBAAU,WACRJ,EAAS0F,eACT1F,EAAS2F,gBACR,IAEH,IAA2BP,EAmE3B,OACExE,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAM3L,UAAWD,EAAQ8C,KAAMuD,MAAM,iBACnCO,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CACE5L,UAAWD,EAAQ0E,UACnBA,WAAS,EACTD,QAAS,EACTqH,QAAS,iBAETlF,EAAAC,EAAAC,cAAA,4BACkBjH,EAAMuL,cAAgBvL,EAAMuL,aAAavN,OAD3D,MAKF+I,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CACE5L,UAAWD,EAAQ0E,UACnBA,WAAS,EACTD,QAAS,EACTsH,UAAW,UAEVlM,EAAMuL,cACLvL,EAAMyL,wBAtFgB,KADHF,EAwFAvL,EAAMuL,cAvFdvN,OAEb+I,EAAAC,EAAAC,cAACa,EAAA,EAAD,4DAKJiC,QAAQC,IAAIhK,EAAMyL,uBAElBF,EAAazJ,QAAQ,SAACwE,EAAU2B,GAC9B,IAAMkE,EAASnM,EAAMyL,sBAAsBW,KACzC,SAAAC,GAAI,OAAIA,EAAK9C,aAAejD,EAASmB,KAEnC0E,IACFZ,EAAatD,GAAOpB,OAASsF,EAAO1C,YACpC8B,EAAatD,GAAOgC,aAAekC,EAAO1E,GAC1C8D,EAAatD,GAAOgB,kBAAoBkD,EAAOlD,qBAInDc,QAAQC,IAAIuB,GAELA,EAAa7E,IAAI,SAAAJ,GACtB,OACES,EAAAC,EAAAC,cAACjD,EAAA,EAADpC,OAAA0K,OAAA,CACEnE,IAAK7B,EAASiG,MACVZ,EAFN,CAGEvL,UAAWoM,YAAKrM,EAAQqK,SAAUpK,KAElC2G,EAAAC,EAAAC,cAAC3C,EAAA,EAAD,CAAalE,UAAWD,EAAQwK,SAC9B5D,EAAAC,EAAAC,cAAA,OAAK7G,UAAWD,EAAQ8K,QACtBlE,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAQC,IAAI,SAAStM,UAAWD,EAAQgL,QAAxC,KAGApE,EAAAC,EAAAC,cAAA,OACEW,MAAO,CACLzE,QAAS,OACTC,cAAe,WAGjB2D,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAYpG,QAAQ,MAAM4E,EAASE,OAClCF,EAASG,QAAQC,IAAI,SAACC,EAAQsB,GAC7B,OACElB,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACGnK,IAAUsK,GADb,KACuBtB,EAAOC,gBAOtCG,EAAAC,EAAAC,cAAA,OAAK7G,UAAWD,EAAQmL,SACtBvE,EAAAC,EAAAC,cAAA,OAAKW,MAAO,CAAEzE,QAAS,SACpBmD,EAASO,OACRE,EAAAC,EAAAC,cAAC0F,EAAD,CAAgBrG,SAAUA,EAAUD,UAAU,IAE9CU,EAAAC,EAAAC,cAAC0F,EAAD,CAAgBrG,SAAUA,gBC7I5ClJ,EAAAC,EAAAC,EAAA,4BAAAsP","file":"static/js/7.3424db2c.chunk.js","sourcesContent":["import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar FormControlContext =\n/*#__PURE__*/\nReact.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;","export const charArray = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\"\n];\n","// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\nexport function hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0);\n} // Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\n\nexport function isFilled(obj) {\n  var SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\n} // Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\n\nexport function isAdornedStart(obj) {\n  return obj.startAdornment;\n}","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref.default,\n      name = _ref.name,\n      _ref$state = _ref.state,\n      state = _ref$state === void 0 ? 'value' : _ref$state;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: A component is changing the \".concat(isControlled ? '' : 'un', \"controlled \").concat(state, \" state of \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([\"Material-UI: A component is changing the default \".concat(state, \" state of an uncontrolled \").concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    verticalAlign: 'top' // Fix alignment issue on Safari.\n\n  },\n\n  /* Styles applied to the root element if `margin=\"normal\"`. */\n  marginNormal: {\n    marginTop: 16,\n    marginBottom: 8\n  },\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  }\n};\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️Only one input can be used within a FormControl.\n */\n\nvar FormControl =\n/*#__PURE__*/\nReact.forwardRef(function FormControl(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      visuallyFocused = props.focused,\n      _props$hiddenLabel = props.hiddenLabel,\n      hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel,\n      _props$margin = props.margin,\n      margin = _props$margin === void 0 ? 'none' : _props$margin,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      size = props.size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"fullWidth\", \"focused\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"]);\n\n  var _React$useState = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        var input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  }),\n      adornedStart = _React$useState[0],\n      setAdornedStart = _React$useState[1];\n\n  var _React$useState2 = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  }),\n      filled = _React$useState2[0],\n      setFilled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  var focused = visuallyFocused !== undefined ? visuallyFocused : _focused;\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  var registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var registeredInput = React.useRef(false);\n\n    registerEffect = function registerEffect() {\n      if (registeredInput.current) {\n        console.error(['Material-UI: There are multiple InputBase components inside a FormControl.', 'This is not supported. It might cause infinite rendering loops.', 'Only use one InputBase.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return function () {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  var onFilled = React.useCallback(function () {\n    setFilled(true);\n  }, []);\n  var onEmpty = React.useCallback(function () {\n    setFilled(false);\n  }, []);\n  var childContext = {\n    adornedStart: adornedStart,\n    setAdornedStart: setAdornedStart,\n    color: color,\n    disabled: disabled,\n    error: error,\n    filled: filled,\n    focused: focused,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    margin: (size === 'small' ? 'dense' : undefined) || margin,\n    onBlur: function onBlur() {\n      setFocused(false);\n    },\n    onEmpty: onEmpty,\n    onFilled: onFilled,\n    onFocus: function onFocus() {\n      setFocused(true);\n    },\n    registerEffect: registerEffect,\n    required: required,\n    variant: variant\n  };\n  return (\n    /*#__PURE__*/\n    React.createElement(FormControlContext.Provider, {\n      value: childContext\n    },\n    /*#__PURE__*/\n    React.createElement(Component, _extends({\n      className: clsx(classes.root, className, margin !== 'none' && classes[\"margin\".concat(capitalize(margin))], fullWidth && classes.fullWidth),\n      ref: ref\n    }, other), children))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The contents of the form control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component will be displayed in focused state.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControl'\n})(FormControl);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card =\n/*#__PURE__*/\nReact.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return (\n    /*#__PURE__*/\n    React.createElement(Paper, _extends({\n      className: clsx(classes.root, className),\n      elevation: raised ? 8 : 1,\n      ref: ref\n    }, other))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent =\n/*#__PURE__*/\nReact.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return (\n    /*#__PURE__*/\n    React.createElement(Component, _extends({\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { submitAnswer, reSubmitAnswer } from \"actions\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  container: {\n    marginTop: theme.spacing(3)\n  },\n  button: {\n    marginLeft: theme.spacing(1)\n  },\n  input: {\n    // display: 'none',\n  }\n}));\n\nconst SubmitAnswer = props => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [statement, setStatement] = useState(\"\");\n  const [optionList, setOptionList] = useState([]);\n  const [textOption, setTextOption] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const dispatch = useDispatch();\n  const { reSubmit, question } = props;\n\n  useEffect(() => {\n    setStatement(question.title);\n    setOptionList(question.options);\n    if (reSubmit) {\n      question.options.map(option => {\n        if (option.optionText === question.answer) {\n          setValue(option.optionText);\n        }\n      });\n    }\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmitAnswer = () => {\n    let data = {\n      submissionHistory: question.submissionHistory\n        ? [...question.submissionHistory]\n        : []\n    };\n    const user = window.localStorage.getItem(\"user_id\");\n    data.questionId = question.id;\n    data.userId = user;\n    data.answerValue = value;\n    data.submissionHistory.push({ answer: value, timestamp: Date.now() });\n\n    if (statement === \"\" || optionList.length === 0 || value === \"\") {\n      alert(\"please input necessary field.\");\n    } else {\n      console.log(data);\n      if (reSubmit) {\n        data.id = question.submissionId;\n        dispatch(reSubmitAnswer(data));\n      } else {\n        dispatch(submitAnswer(data));\n      }\n      handleClose();\n    }\n  };\n\n  const handleChange = (event, index) => {\n    setValue(event.target.value);\n\n    optionList.map((option, optionIndex) => {\n      if (optionIndex === index) {\n        option.correct = true;\n      } else {\n        option.correct = false;\n      }\n    });\n  };\n\n  return (\n    <div>\n      <Button\n        size=\"small\"\n        variant=\"contained\"\n        color={reSubmit ? \"secondary\" : \"primary\"}\n        className={classes.button}\n        onClick={handleClickOpen}\n      >\n        {reSubmit ? \"Submit Again\" : \"Submit Answer\"}\n      </Button>\n\n      <Dialog\n        fullWidth={true}\n        maxWidth={\"sm\"}\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          {statement}\n        </DialogTitle>\n\n        <DialogContent dividers>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <Typography>Please choose an option and submit answer</Typography>\n          </div>\n\n          <FormControl component=\"fieldset\">\n            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value}>\n              {optionList.map((option, index) => (\n                <div>\n                  <FormControlLabel\n                    key={index}\n                    value={option.optionText}\n                    valueIndex={index}\n                    control={<Radio />}\n                    onChange={event => handleChange(event, index)}\n                    label={option.optionText}\n                  />\n                </div>\n              ))}\n            </RadioGroup>\n          </FormControl>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose}>close</Button>\n          <Button\n            autoFocus\n            variant=\"contained\"\n            onClick={handleSubmitAnswer}\n            color=\"primary\"\n          >\n            Submit Answer\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(SubmitAnswer);\n","import React, { useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { getAllQuestion, getSubmittedQuestions } from \"../../../actions\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Avatar, Card, CardContent, Grid, Typography } from \"@material-ui/core\";\n\nimport { Page } from \"components\";\n// import EditQuestion from './components/EditQuestion';\nimport clsx from \"clsx\";\nimport SubmitQuestion from \"./components/SubmitAnswer\";\nimport { charArray } from \"utils/characters\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  },\n  container: {\n    marginTop: theme.spacing(1)\n  },\n  button: {\n    marginLeft: theme.spacing(1)\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\"\n  },\n  cardRoot: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexWrap: \"wrap\",\n    marginBottom: theme.spacing(0.6)\n  },\n  content: {\n    // padding: 1,\n    paddingLeft: 10,\n    padding: theme.spacing(2),\n    flexGrow: 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      flexWrap: \"wrap\"\n    },\n    \"&:last-child\": {\n      paddingBottom: theme.spacing(2)\n    }\n  },\n  header: {\n    maxWidth: \"100%\",\n    width: 440,\n    display: \"flex\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: theme.spacing(2),\n      flexBasis: \"100%\"\n    }\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  stats: {\n    padding: theme.spacing(1),\n    [theme.breakpoints.down(\"sm\")]: {\n      flexBasis: \"50%\"\n    }\n  },\n  actions: {\n    padding: theme.spacing(1),\n    [theme.breakpoints.down(\"sm\")]: {\n      flexBasis: \"50%\"\n    }\n  }\n}));\n\nconst Question = props => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { className, ...rest } = props;\n\n  useEffect(() => {\n    dispatch(getAllQuestion());\n    dispatch(getSubmittedQuestions());\n  }, []);\n\n  const renderQuestionList = questionList => {\n    if (questionList.length === 0) {\n      return (\n        <Typography>\n          No question found. Please add some question first.\n        </Typography>\n      );\n    }\n    console.log(props.submittedQuestionList);\n\n    questionList.forEach((question, index) => {\n      const result = props.submittedQuestionList.find(\n        item => item.questionId === question.id\n      );\n      if (result) {\n        questionList[index].answer = result.answerValue;\n        questionList[index].submissionId = result.id;\n        questionList[index].submissionHistory = result.submissionHistory;\n      }\n    });\n\n    console.log(questionList);\n\n    return questionList.map(question => {\n      return (\n        <Card\n          key={question.uuid}\n          {...rest}\n          className={clsx(classes.cardRoot, className)}\n        >\n          <CardContent className={classes.content}>\n            <div className={classes.header}>\n              <Avatar alt=\"Author\" className={classes.avatar}>\n                Q\n              </Avatar>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\"\n                }}\n              >\n                <Typography variant=\"h5\">{question.title}</Typography>\n                {question.options.map((option, index) => {\n                  return (\n                    <Typography>\n                      {charArray[index]}) {option.optionText}\n                    </Typography>\n                  );\n                })}\n              </div>\n            </div>\n\n            <div className={classes.actions}>\n              <div style={{ display: \"flex\" }}>\n                {question.answer ? (\n                  <SubmitQuestion question={question} reSubmit={true} />\n                ) : (\n                  <SubmitQuestion question={question} />\n                )}\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      );\n    });\n  };\n\n  return (\n    <Page className={classes.root} title=\"Question Bank\">\n      <Grid\n        className={classes.container}\n        container\n        spacing={1}\n        justify={\"space-between\"}\n      >\n        <h2>\n          Question List ({props.questionList && props.questionList.length})\n        </h2>\n      </Grid>\n\n      <Grid\n        className={classes.container}\n        container\n        spacing={1}\n        direction={\"column\"}\n      >\n        {props.questionList &&\n          props.submittedQuestionList &&\n          renderQuestionList(props.questionList)}\n      </Grid>\n    </Page>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    questionList: state.QuestionBankReducer.questionList,\n    submittedQuestionList: state.AnswerReducer.submittedQuestionList\n  };\n};\n\nexport default connect(mapStateToProps)(Question);\n","export { default } from \"./Question\";\n"],"sourceRoot":""}