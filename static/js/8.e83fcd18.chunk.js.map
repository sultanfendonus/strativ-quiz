{"version":3,"sources":["utils/characters.js","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/Visibility.js","../node_modules/@material-ui/icons/Edit.js","views/admin/Questions/components/ViewQuestion.js","views/admin/Questions/components/EditQuestion.js","utils/answer.js","views/admin/Submission/ViewSubmissionHistory.js","views/admin/Submission/ViewSubmission.js","views/admin/Submission/index.js"],"names":["__webpack_require__","d","__webpack_exports__","charArray","_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","useStyles","makeStyles","theme","root","padding","spacing","container","marginTop","button","marginLeft","input","connect","state","props","classes","_useState","useState","_useState2","C_Users_ASUS_workspace_react_strativ_quiz_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","open","setOpen","handleClose","react__WEBPACK_IMPORTED_MODULE_1___default","a","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_3__","size","style","backgroundColor","color","variant","className","startIcon","_material_ui_icons_Visibility__WEBPACK_IMPORTED_MODULE_10___default","onClick","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_5__","fullWidth","maxWidth","onClose","aria-labelledby","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_8__","id","question","title","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_7__","dividers","options","map","option","index","correct","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_9__","fontSize","optionText","_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_6__","C_Users_ASUS_workspace_react_strativ_quiz_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","_useState3","_useState4","statement","setStatement","_useState5","_useState6","optionList","setOptionList","_useState7","_useState8","textOption","setTextOption","_useState9","_useState10","setValue","dispatch","useDispatch","useEffect","react__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_5__","_material_ui_icons_Edit__WEBPACK_IMPORTED_MODULE_18___default","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_9__","display","flexDirection","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_13__","onChange","event","target","marginBottom","width","label","multiline","rows","justifyContent","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_12__","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_17__","component","_material_ui_core_RadioGroup__WEBPACK_IMPORTED_MODULE_15__","aria-label","name","_material_ui_core_FormControlLabel__WEBPACK_IMPORTED_MODULE_16__","key","valueIndex","control","_material_ui_core_Radio__WEBPACK_IMPORTED_MODULE_14__","optionIndex","handleChange","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_11__","newOptionList","filter","innerIndex","deleteOption","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_19___default","onKeyDown","concat","C_Users_ASUS_workspace_react_strativ_quiz_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","autoFocus","placeholder","_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_8__","data","length","alert","updateQuestionInQuestionBank","isCorrectAnswer","ans","slicedToArray","react_default","Button","Visibility_default","Dialog","DialogTitle","DialogContent","List","submissionObject","submissionHistory","history","border","margin","Typography","answer","moment","timestamp","fromNow","DialogActions","_content","backdrop","zIndex","drawer","cardRoot","alignItems","flexWrap","content","paddingLeft","flexGrow","breakpoints","down","paddingBottom","header","flexBasis","avatar","marginRight","stats","actions","submissionList","AnswerReducer","questionId","useParams","getSubmissionByQuestionId","parseInt","components","Grid","justify","direction","forEach","result","userAccounts","find","item","userId","user","Card","clsx","CardContent","Avatar","alt","answerValue","Submission_ViewSubmissionHistory","Submission_ViewSubmission"],"mappings":"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","file":"static/js/8.e83fcd18.chunk.js","sourcesContent":["export const charArray = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\"\n];\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport PropTypes from \"prop-types\";\nimport { charArray } from \"utils/characters\";\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  container: {\n    marginTop: theme.spacing(3)\n  },\n  button: {\n    marginLeft: theme.spacing(1)\n  },\n  input: {\n    // display: 'none',\n  }\n}));\n\nconst ViewQuestion = props => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    // clearState()\n  };\n\n  return (\n    <div>\n      <Button\n        size=\"small\"\n        style={{ backgroundColor: \"#43A048\", color: \"white\" }}\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        startIcon={<VisibilityIcon />}\n        onClick={handleClickOpen}\n      >\n        View\n      </Button>\n\n      <Dialog\n        fullWidth={true}\n        maxWidth={\"md\"}\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          {props.question.title}\n        </DialogTitle>\n\n        <DialogContent dividers>\n          {props.question.options.map((option, index) => {\n            if (option.correct) {\n              return (\n                <Typography style={{ color: \"blue\", fontSize: 16 }}>\n                  {charArray[index]}) {option.optionText}\n                </Typography>\n              );\n            }\n            return (\n              <Typography>\n                {charArray[index]}) {option.optionText}\n              </Typography>\n            );\n          })}\n\n          <Typography style={{ marginTop: 20, fontSize: 11 }}>\n            * Correct answer is highlighted by blue color.\n          </Typography>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nViewQuestion.propTypes = {\n  question: PropTypes.object\n};\n\nexport default connect(mapStateToProps)(ViewQuestion);\n","import React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { updateQuestionInQuestionBank } from \"actions\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  container: {\n    marginTop: theme.spacing(3)\n  },\n  button: {\n    marginLeft: theme.spacing(1)\n  },\n  input: {\n    // display: 'none',\n  }\n}));\n\nconst EditQuestion = props => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [statement, setStatement] = useState(\"\");\n  const [optionList, setOptionList] = useState([]);\n  const [textOption, setTextOption] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setStatement(props.question.title);\n    setOptionList(props.question.options);\n    props.question.options.map(option => {\n      if (option.correct === true) {\n        setValue(option.optionText);\n      }\n    });\n  }, [props.question]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleUpdateQuestion = () => {\n    let data = {};\n    data.id = props.question.id;\n    data.title = statement;\n    data.options = optionList;\n\n    if (statement === \"\" || optionList.length === 0 || value === \"\") {\n      alert(\"please input necessary field.\");\n    } else {\n      dispatch(updateQuestionInQuestionBank(data));\n      handleClose();\n    }\n  };\n\n  const handleChange = (event, index) => {\n    setValue(event.target.value);\n\n    optionList.map((option, optionIndex) => {\n      if (optionIndex === index) {\n        option.correct = true;\n      } else {\n        option.correct = false;\n      }\n    });\n  };\n\n  const deleteOption = index => {\n    let newOptionList = optionList.filter((option, innerIndex) => {\n      return innerIndex !== index;\n    });\n    setOptionList(newOptionList);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\") {\n      setOptionList([\n        ...optionList,\n        { optionText: textOption, correct: false }\n      ]);\n      setTextOption(\"\");\n    }\n  };\n\n  return (\n    <div>\n      <Button\n        size=\"small\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        startIcon={<EditIcon />}\n        onClick={handleClickOpen}\n      >\n        Edit\n      </Button>\n\n      <Dialog\n        maxWidth={\"xl\"}\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Edit Question\n        </DialogTitle>\n\n        <DialogContent dividers>\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            <TextField\n              onChange={event => setStatement(event.target.value)}\n              value={statement}\n              style={{ marginBottom: 10, width: 600 }}\n              id=\"question-statement\"\n              label=\"Question Statement\"\n              multiline\n              rows={4}\n              variant=\"outlined\"\n            />\n          </div>\n\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <Typography>Options:</Typography>\n          </div>\n\n          <FormControl component=\"fieldset\">\n            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value}>\n              {optionList.map((option, index) => (\n                <div>\n                  <FormControlLabel\n                    key={index}\n                    value={option.optionText}\n                    valueIndex={index}\n                    control={<Radio />}\n                    onChange={event => handleChange(event, index)}\n                    label={option.optionText}\n                  />\n\n                  <IconButton\n                    onClick={() => deleteOption(index)}\n                    aria-label=\"delete\"\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </div>\n              ))}\n            </RadioGroup>\n          </FormControl>\n\n          <div style={{ marginTop: 10 }}>\n            <TextField\n              onKeyDown={handleKeyDown}\n              autoFocus\n              fullWidth={true}\n              value={textOption}\n              onChange={event => setTextOption(event.target.value)}\n              style={{ marginBottom: 5 }}\n              id=\"question-option\"\n              label=\"Input Option\"\n              placeholder=\"Input an option and hit enter\"\n              variant=\"outlined\"\n            />\n          </div>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose}>close</Button>\n          <Button\n            autoFocus\n            variant=\"contained\"\n            onClick={handleUpdateQuestion}\n            color=\"primary\"\n          >\n            Update Question\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(EditQuestion);\n","export const isCorrectAnswer = (ans, options) => {\n  return options.map(option => {\n    if (option.optionText === ans) {\n      if (option.correct) {\n        return \"(correct)\";\n      } else {\n        return \"(wrong)\";\n      }\n    } else {\n      return null;\n    }\n  });\n};\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport PropTypes from \"prop-types\";\nimport { charArray } from \"utils/characters\";\nimport moment from \"moment\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { isCorrectAnswer } from \"utils/answer\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  container: {\n    marginTop: theme.spacing(3)\n  },\n  button: {\n    marginLeft: theme.spacing(1)\n  },\n  input: {\n    // display: 'none',\n  }\n}));\n\nconst ViewSubmissionHistory = props => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button\n        size=\"small\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        startIcon={<VisibilityIcon />}\n        onClick={handleClickOpen}\n      >\n        View Submission History\n      </Button>\n\n      <Dialog\n        fullWidth={true}\n        maxWidth={\"md\"}\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Submission History\n        </DialogTitle>\n\n        <DialogContent dividers>\n          <List className={classes.root}>\n            {props.submissionObject.submissionHistory.map((history, index) => {\n              return (\n                <div\n                  style={{ border: \"1px solid black\", padding: 5, margin: 5 }}\n                >\n                  <Typography variant=\"h6\">\n                    {history.answer}\n                    {\" - \"}\n                    {isCorrectAnswer(\n                      history.answer,\n                      props.submissionObject.question.options\n                    )}\n                  </Typography>\n                  <Typography variant=\"subtitle2\">\n                    {moment(history.timestamp).fromNow()}\n                  </Typography>\n                </div>\n              );\n            })}\n          </List>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nViewSubmissionHistory.propTypes = {\n  submissionObject: PropTypes.object\n};\n\nexport default connect(mapStateToProps)(ViewSubmissionHistory);\n","import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport {\n  deleteQuestionFromQuestionBank,\n  getSubmissionByQuestionId\n} from \"actions\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Avatar, Card, CardContent, Grid, Typography } from \"@material-ui/core\";\nimport { Page } from \"../../../components\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport clsx from \"clsx\";\nimport Button from \"@material-ui/core/Button\";\nimport ViewQuestion from \"../Questions/components/ViewQuestion\";\nimport EditQuestion from \"../Questions/components/EditQuestion\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { userAccounts } from \"../../../constant/account\";\nimport ViewSubmissionHistory from \"./ViewSubmissionHistory\";\nimport { isCorrectAnswer } from \"utils/answer\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  },\n  container: {\n    marginTop: theme.spacing(1)\n  },\n  button: {\n    marginLeft: theme.spacing(1)\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\"\n  },\n  cardRoot: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexWrap: \"wrap\",\n    marginBottom: theme.spacing(0.6)\n  },\n  content: {\n    // padding: 1,\n    paddingLeft: 10,\n    padding: theme.spacing(2),\n    flexGrow: 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      flexWrap: \"wrap\"\n    },\n    \"&:last-child\": {\n      paddingBottom: theme.spacing(2)\n    }\n  },\n  header: {\n    maxWidth: \"100%\",\n    width: 440,\n    display: \"flex\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: theme.spacing(2),\n      flexBasis: \"100%\"\n    }\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  stats: {\n    padding: theme.spacing(1),\n    [theme.breakpoints.down(\"sm\")]: {\n      flexBasis: \"50%\"\n    }\n  },\n  actions: {\n    padding: theme.spacing(1),\n    [theme.breakpoints.down(\"sm\")]: {\n      flexBasis: \"50%\"\n    }\n  }\n}));\n\nconst ViewSubmission = props => {\n  const { questionId } = useParams();\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    dispatch(getSubmissionByQuestionId(parseInt(questionId)));\n  }, []);\n\n  const renderSubmissionList = submissionList => {\n    if (submissionList.length === 0) {\n      return (\n        <Typography>\n          No Submission Found for this question! Please check back later.\n        </Typography>\n      );\n    }\n\n    submissionList.forEach((question, index) => {\n      const result = userAccounts.find(\n        item => item.id === parseInt(question.userId)\n      );\n      if (result) {\n        submissionList[index].user = result;\n      }\n    });\n\n    return submissionList.map(item => {\n      return (\n        <Card key={item.id} className={clsx(classes.cardRoot)}>\n          <CardContent className={classes.content}>\n            <div className={classes.header}>\n              <Avatar alt=\"Author\" className={classes.avatar}>\n                P\n              </Avatar>\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <Typography variant=\"h6\">\n                  {item.user && item.user.name}\n                </Typography>\n                <Typography variant=\"subtitle2\">\n                  Last Submitted Answer - <b>{item.answerValue}</b>{\" \"}\n                  {/*{isCorrectAnswer(item.answerValue, item.question.options)*/}\n                  {/*  ? \"true\"*/}\n                  {/*  : \"false\"}*/}\n                  {/*{isCorrectAnswer(item.answerValue, item.question.options)}*/}\n                  {isCorrectAnswer(item.answerValue, item.question.options)}\n                </Typography>\n              </div>\n            </div>\n\n            <div className={classes.actions}>\n              <ViewSubmissionHistory submissionObject={item} />\n            </div>\n          </CardContent>\n        </Card>\n      );\n    });\n  };\n\n  return (\n    <Page className={classes.root} title=\"Submissions\">\n      <Grid\n        className={classes.container}\n        container\n        spacing={1}\n        justify={\"space-between\"}\n      >\n        <h2>\n          Submission ({props.submissionList && props.submissionList.length})\n        </h2>\n      </Grid>\n\n      <Grid\n        className={classes.container}\n        container\n        spacing={1}\n        direction={\"column\"}\n      >\n        {props.submissionList && renderSubmissionList(props.submissionList)}\n      </Grid>\n    </Page>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    submissionList: state.AnswerReducer.submissionList\n  };\n};\n\nexport default connect(mapStateToProps)(ViewSubmission);\n","export { default } from \"./ViewSubmission\";\n"],"sourceRoot":""}